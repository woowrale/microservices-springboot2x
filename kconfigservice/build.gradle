import org.jetbrains.kotlin.gradle.tasks.KotlinCompile
import com.bmuschko.gradle.docker.tasks.image.*

buildscript {
	repositories {
		mavenCentral()
	}
}

plugins {
	id 'org.jetbrains.kotlin.jvm' version '1.2.51'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.2.51'
	id 'com.bmuschko.docker-remote-api' version '4.10.0'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'org.springframework.boot' version '2.1.7.RELEASE'
}

def javaVersion = '1.8'
def projectVersion = '0.0.1'
def companyName = 'woowrale'
def projectName = 'kconfigservice'
def dockerPath = 'src/main/resources/docker'

version = "${projectVersion}"
description = "${projectName}"
sourceCompatibility = "${javaVersion}"

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "Greenwich.SR2")
}

dependencies {
	compile 'org.springframework.boot:spring-boot-starter-actuator'
	compile 'org.springframework.boot:spring-boot-starter-web'
	compile 'com.fasterxml.jackson.module:jackson-module-kotlin'
	compile 'org.jetbrains.kotlin:kotlin-reflect'
	compile 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
	compile 'org.springframework.cloud:spring-cloud-config-server'

	testCompile 'org.springframework.boot:spring-boot-starter-test'

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.withType(KotlinCompile) {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = "${javaVersion}"
	}
}

task copyDockerDir(type: Copy){
	from file("${dockerPath}")
	into file("$buildDir/libs")
}

task buildDockerImage(type: DockerBuildImage) {
	inputDir = file("$buildDir/libs/")
	tags.add("${companyName}/${projectName}:${projectVersion}")
}

buildDockerImage.dependsOn(copyDockerDir)
